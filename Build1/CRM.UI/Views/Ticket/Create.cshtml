@model CRM.UI.ViewModels.TicketCreateModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

<script src="~/Scripts/jquery-1.10.2.js"></script>
@using (Html.BeginForm())
{
    var Success = ViewBag.Message;
    if (Success != "")
    {
        <h3 style="color:green">@Success</h3>
    }
    else
    {
        <h3>ViewBag.ErrorMessage</h3>
    }
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>
               <div class="form-group">
            @Html.LabelFor(model => model.ProductId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ProductId, new SelectList(Model.Products, "Id", "Name"), "Select Product", new { @class = "form-control", @Id = "ProductId", @Name = "ProductId", @onchange = "BindDropDownList(this.id)" })
                @*@Html.DropDownListFor(model => model.ProductId, (SelectList)ViewBag.lstProducts, "Select Product", new { @class = "form-control required", @Id = "ddlProducts", @name = "ddlProducts", @onchange = "BindDropDownOptions(this.id)" })*@
                @Html.ValidationMessageFor(model => model.ProductId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ComponentId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.DropDownListFor(model => model.ComponentId, (SelectList)ViewBag.lstComponents, "Select Component", new { @class = "form-control required", @Id = "ddlComponents", @name = "ddlComponents", @onchange = "BindDropDownOptions(this.id)" })*@
                @Html.DropDownListFor(model => model.ComponentId, new SelectList(Model.Components, "ComponentId", "ComponentName"), "Select Component", new { @class = "form-control", @Id = "ComponentId", @Name = "ComponentId" })
                @*@Html.ValidationMessageFor(model => model.ComponentId, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.VersionId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.VersionId, new SelectList(Model.Versions, "VersionId", "VersionName"), "Select Version", new { @class = "form-control", @Id = "VersionId" })
                @Html.ValidationMessageFor(model => model.VersionId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.PriorityId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.PriorityId, new SelectList(Model.Priorities, "Id", "PriorityName"), "Select Priority", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PriorityId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.SeviorityId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.SeviorityId, new SelectList(Model.Seviorities, "Id", "SeviorityName"), "Select Seviority", new { @class = "form-control"})
                @Html.ValidationMessageFor(model => model.SeviorityId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.TicketTypeId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.TicketTypeId, new SelectList(Model.TicketTypes, "Id", "Type"), "Select Ticket Type", new { @class = "form-control"})
                @Html.ValidationMessageFor(model => model.TicketTypeId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" onclick="save();" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "List")
</div>
<script type="text/javascript">
    //function save() {
    //    $("#id").val('Title', 'Description', 'ProductId', 'ComponentId', 'Version', 'CompanyId');

    //}

    function BindDropDownList(id) {
        debugger;
        var actionUrl = '@Url.Action("BindDropDowns", "Ticket")';

        var ProductID = $("#ProductId").val();

        $.post(actionUrl, { flag: "Components", Id: ProductID }, function (response) {
            $("#ComponentId").html(response).prepend("<option value='0' Selected >Select Component </option>");
        });

        $.post(actionUrl, { flag: "Versions", Id: ProductID }, function (response) {
            $("#VersionId").html(response).prepend("<option value='0' Selected >Select Versions </option>");
        });


    }

</script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
